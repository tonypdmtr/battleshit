######################################
David Tucker -- dmtucker
Lab section: 3 MW TA: Aimen Al-Refai
Due: 12/4/2011 [2011-12-04]
Lab Partner: Dylan Moon, Kiersten Gray
######################################

Battleship

Purpose: To make a crappy game

Procedure:
First we went through the whole process and put it into a flowchart. We would get player 1 and 2 input coordinates for their 4 battleships with the toggles and interrupt button. Then, each player would take turns going back forth inputting coordinates. The game will eventually end after all 4 battleships of one player get destroyed.

Algorithms and other data:
    -If the interrupt button is ever pushed, set the ready flag to 1.
    -Initialize (register interrupt subroutine, print a greeting) & begin placing ships for p1.
        -Get coordinates of position to place on
            -If invalid input, print a message and ask again
        -Make sure a ship isn't already in that position
            -If one is, print a message then get new coordinates
        -Place ship and repeat 3 times
            -Place ship on players board
            -Update fleet indicator (LEDS)
        -Repeat for player 2
            -Switch player indicator (LCD LINE 1)
    -Enter game loop:
        -Fire a ship
            -Get coordinates of position to be fired on
                -If invalid input, print a message and ask again
            -Check if there is a ship on the other players board at that position
                -If there is, print a message and remove it
                    -Decrease ship count
                    -Remove ship off board
                    -Update fleet indicator (LEDS)
                -If there isn't, print a message
        -See if anyone died (has 0 ships left)
            -If yes, print a message & exit game loop
                -Print a game over message and wait for the interrupt button to restart
        -Switch players
            -Switch player indicator (LCD LINE 1)
        -Repeat

Obstacles:
        The hardest part of this lab for me was debugging. What helped most was putting in debug messages that print to the console.

More:
    none

Conclusion:
    The most important concepts demonstrated in the lab were figuring out how to create a functional application in assembly language.
    It turned out to be more fun then I thought; it might be because of the interaction between the software and hardware.
    However, I also learned a great deal on the value of backing up data! Especially as you work.
